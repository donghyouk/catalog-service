server:
  port: 9001
  tomcat:
    connection-timeout: 2s # TCP 연결을 수락하고, 실제 http 요청을 받기(시작되기?)까지 기다리는 시간, 기본 20s
    keep-alive-timeout: 15s # 연결 비용을 줄이기 위해, 새로운 http 요청을 기다리는 동안 연결을 유지하는 시간, 미설정 시 connection-timeout 값 사용
    threads:
      max: 50 # 로컬에서 자원 사용 줄이기 위해 50으로 설정, 기본값 200
      min-spare: 5 # 기본값 10

spring:
  application:
    name: catalog-service
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000 # 설정 서버에 연결될 때까지 기다리는 시간(ms)
      request-read-timeout: 5000 # 설정 서버에서 설정 데이터를 읽을 때까지 기다리는 시간(ms)
      fail-fast: false # 설정 서버 연결 실패를 치명적 오류로 판단(true여야 재시도 작동)
      retry:
        max-attempts: 6
        initial-interval: 1000 # 최초 재시도 지연 시간(ms)
        max-interval: 2000 # 재시도 지연 최대 시간(ms)
        multiplier: 1.1 # 지연 시간 계산 승수
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000
      maximum-pool-size: 5

management:
  endpoints:
    web:
      exposure:
        include: "refresh"
        # refresh: RefreshScopeRefreshedEvent - @RefreshScope <= @ConfigurationProperties

polar:
  greeting: Welcome to the local book catalog!
  